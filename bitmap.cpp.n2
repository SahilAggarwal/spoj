#include <iostream>
#include <algorithm>
#include <cstring>

using namespace std;


int bmap[200][200];
int bfs[200][200];
int n,m;


void  do_bfs(int ii,int jj) {
	for(int i=0;i<n;i++) {
		for(int j=0;j<m;j++) {
			int dist = abs(ii-i) + abs(jj-j);
			if(bfs[i][j] != -1) {
				bfs[i][j] = min(bfs[i][j], dist);
			} else {
				bfs[i][j] = dist;
			}
		}
	}
}


void compute() {
	for(int i=0;i<n;i++) {
		for(int j=0;j<m;j++) {
			if(bmap[i][j]==1) {
				do_bfs(i,j);
			}
		}
	}
}

int main() {
	int t;
	cin>>t;
	while(t--) {
		cin>>n;
		cin>>m;
		for(int i=0;i<n;i++) {
				string s;
				cin>>s;
				for(int j=0;j<m;j++){
					bmap[i][j] = s[j] - '0';
				}
		}
		memset(bfs, -1, sizeof(bfs));
		compute();
		for(int i=0;i<n;i++) {
			for(int j=0;j<m;j++) {
				cout<<bfs[i][j];
				if(j<(m-1))
					cout<<" ";
			}
			if(i<(n-1))
				cout<<"\n";
		}
	}
}
